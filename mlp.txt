1.

<program> ::= <type> ID(<parameter_list>) {<variable_declaration> <instruction_list>}

<type> ::= <type_no_void> | <void_type>
<type_no_void> ::= <primitive_type> | <struct_type>
<primitive_type> ::= int | double
<struct_type> ::= struct ID {<variable_declaration>};
<void_type> ::= void

<parameter_list> ::= <type_no_void> <variable>",", <parameter_list> | <type_no_void> <variable>

<variable_declaration> ::= <type_no_void> <variable_list>";" | <type_no_void> <assign>";"
<variable_list> ::= <variable>",", <variable_list> | <variable>
<variable> ::= ID

<instruction_list> ::= <instruction>;<instruction_list> | ..
<instruction_list> ::= <instruction>
<instruction> ::= <assign> | <conditional_instruction> | <loop_instruction> | <read> | <write>

<assign> ::= ID = <expression>
<expression> ::= ID | CONST | <expression> <arithmetic_operator> <expression>
<arithmetic_operator> ::= "+" | "-" | "*" | "/" | "%"

<conditional_instruction> ::= if (<conditional_expression) {<instruction_list>} |
                  if (<conditional_expression) {<instruction_list>} else {<instruction_list>}
<conditional_expression> ::= <expression> <relational_operator> <expression>
<relational_operator> ::= "<" | ">" | "==" | "!=" | "<=" | ">="
                  
<loop_instruction> ::= while (<conditional_expression>) {instruction_list}

<read> ::= <var> = read_<primitive_type>();
<write> ::= write(<expression>);


ID ::= [a-zA-Z][a-zA-Z0-9]{0,7}
CONST ::= <int> | <double>
digitsNoZero ::= "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"
digits ::= "0" | digitsNoZero
<int> ::= "0" | ["+"|"-"]digitsNoZero{digits}
<double> ::= ["+"|"-"]{digits}"."{digits}digitsNoZero|{digits}

reserved words: int, double, struct, void, while, if, else, read_int, read_double, write


2.

void perimetruArie(double raza) {
    double pi = 3.14;
    
    double perimetru = 2 * pi * raza;
    double arie = pi * raza * raza;
    
    write(perimetru);
    write(arie);
}


void cmmdc(int a, int b) {
    
    while (b != 0) {
        int r = a % b;
        a = b;
        b = r;
    }
    
    write(a);
}


void suma(int n) {
    int suma = 0;
    
    while (n > 0) {
        n = n - 1;
        int nr;
        nr = read_int();
        suma = suma + nr;
    }
    
    write(suma);
}


3.

void program() {
    int 3i = 0;
    
    if (3i + 1 = 2) {
        3i = 5;
    }
}


void program() {
    int x = 1;
    
    if (x != 0) {
        x--;
    }
    
    for (int i = 0; i < 7; i+=1) {
        ++x;
    }
}



